version: '3'

services:
  web: &web
    container_name: ice_pos_web
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 8056:8056
    volumes:
      - ./media:/app/media
      - ./static:/app/static
      - db_dumps:/var/db_dumps
    environment:
      - USE_POSTGRES=1
      - POSTGRES_DB=ice_pos
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - redis
    command: python manage.py runserver 0.0.0.0:8056
    restart: always
  db:
    build:
      context: .
      dockerfile: ./DBDockerfile
    container_name: ice_pos_db
    environment:
      - POSTGRES_DB=ice_pos
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    volumes:
      - db_data:/var/lib/postgresql/data/
      - db_dumps:/var/db_dumps
    restart: always
  redis:
    image: redis:6.0.9-alpine
    container_name: ice_pos_redis
    restart: always

  celery_beat:
    <<: *web
    container_name: ice_pos_celery_beat
    ports: []
    command: celery -A pos_system.celery beat -l info
    restart: always

  celery_worker:
    <<: *web
    container_name: ice_pos_celery_worker
    command: celery -A pos_system.celery worker -l info
    ports: []
    restart: always
  
volumes:
  db_data:
  db_dumps:
